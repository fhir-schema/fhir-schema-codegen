// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

using System.ComponentModel;

namespace Aidbox.FHIR.R4.Core;

public class Appointment : DomainResource
{
    public string? Description { get; set; }
    public CodeableConcept[]? ServiceCategory { get; set; }
    public ResourceReference[]? Slot { get; set; }
    public CodeableConcept[]? Specialty { get; set; }
    public CodeableConcept? CancelationReason { get; set; }
    public Period[]? RequestedPeriod { get; set; }
    public string? PatientInstruction { get; set; }
    public string? Start { get; set; }
    public CodeableConcept[]? ReasonCode { get; set; }
    public string? Created { get; set; }
    public required AppointmentParticipant[] Participant { get; set; }
    public CodeableConcept[]? ServiceType { get; set; }
    public ResourceReference[]? SupportingInformation { get; set; }
    public long? Priority { get; set; }
    public CodeableConcept? AppointmentType { get; set; }
    public required StatusEnum Status { get; set; }
    public string? Comment { get; set; }
    public long? MinutesDuration { get; set; }
    public Identifier[]? Identifier { get; set; }
    public ResourceReference[]? BasedOn { get; set; }
    public string? End { get; set; }
    public ResourceReference[]? ReasonReference { get; set; }
    
    public class AppointmentParticipant : BackboneElement
    {
        public CodeableConcept[]? Type { get; set; }
        public ResourceReference? Actor { get; set; }
        public RequiredEnum? Required { get; set; }
        public required StatusEnum Status { get; set; }
        public Period? Period { get; set; }
        
        public enum RequiredEnum
        {
            [Description("required")]
            Required ,
            [Description("optional")]
            Optional ,
            [Description("information-only")]
            InformationDashOnly ,
        }
        public enum StatusEnum
        {
            [Description("accepted")]
            Accepted ,
            [Description("declined")]
            Declined ,
            [Description("tentative")]
            Tentative ,
            [Description("needs-action")]
            NeedsDashAction ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum StatusEnum
    {
        [Description("proposed")]
        Proposed ,
        [Description("pending")]
        Pending ,
        [Description("booked")]
        Booked ,
        [Description("arrived")]
        Arrived ,
        [Description("fulfilled")]
        Fulfilled ,
        [Description("cancelled")]
        Cancelled ,
        [Description("noshow")]
        Noshow ,
        [Description("entered-in-error")]
        EnteredDashInDashError ,
        [Description("checked-in")]
        CheckedDashIn ,
        [Description("waitlist")]
        Waitlist ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

