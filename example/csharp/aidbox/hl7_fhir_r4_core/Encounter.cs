// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

using System.ComponentModel;

namespace Aidbox.FHIR.R4.Core;

public class Encounter : DomainResource
{
    public ResourceReference[]? Appointment { get; set; }
    public EncounterDiagnosis[]? Diagnosis { get; set; }
    public ResourceReference? ServiceProvider { get; set; }
    public ResourceReference[]? EpisodeOfCare { get; set; }
    public CodeableConcept[]? ReasonCode { get; set; }
    public CodeableConcept[]? Type { get; set; }
    public EncounterParticipant[]? Participant { get; set; }
    public CodeableConcept? ServiceType { get; set; }
    public ResourceReference[]? Account { get; set; }
    public EncounterClassHistory[]? ClassHistory { get; set; }
    public CodeableConcept? Priority { get; set; }
    public required StatusEnum Status { get; set; }
    public required Coding Class { get; set; }
    public Duration? Length { get; set; }
    public Identifier[]? Identifier { get; set; }
    public EncounterHospitalization? Hospitalization { get; set; }
    public Period? Period { get; set; }
    public ResourceReference[]? BasedOn { get; set; }
    public ResourceReference? PartOf { get; set; }
    public EncounterLocation[]? Location { get; set; }
    public ResourceReference? Subject { get; set; }
    public EncounterStatusHistory[]? StatusHistory { get; set; }
    public ResourceReference[]? ReasonReference { get; set; }
    
    public class EncounterClassHistory : BackboneElement
    {
        public required Coding Class { get; set; }
        public required Period Period { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class EncounterDiagnosis : BackboneElement
    {
        public required ResourceReference Condition { get; set; }
        public CodeableConcept? Use { get; set; }
        public long? Rank { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class EncounterHospitalization : BackboneElement
    {
        public CodeableConcept? DischargeDisposition { get; set; }
        public Identifier? PreAdmissionIdentifier { get; set; }
        public CodeableConcept[]? SpecialArrangement { get; set; }
        public CodeableConcept[]? DietPreference { get; set; }
        public CodeableConcept? AdmitSource { get; set; }
        public CodeableConcept[]? SpecialCourtesy { get; set; }
        public CodeableConcept? ReAdmission { get; set; }
        public ResourceReference? Origin { get; set; }
        public ResourceReference? Destination { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class EncounterLocation : BackboneElement
    {
        public required ResourceReference Location { get; set; }
        public StatusEnum? Status { get; set; }
        public CodeableConcept? PhysicalType { get; set; }
        public Period? Period { get; set; }
        
        public enum StatusEnum
        {
            [Description("planned")]
            Planned ,
            [Description("active")]
            Active ,
            [Description("reserved")]
            Reserved ,
            [Description("completed")]
            Completed ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class EncounterParticipant : BackboneElement
    {
        public CodeableConcept[]? Type { get; set; }
        public Period? Period { get; set; }
        public ResourceReference? Individual { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class EncounterStatusHistory : BackboneElement
    {
        public required StatusEnum Status { get; set; }
        public required Period Period { get; set; }
        
        public enum StatusEnum
        {
            [Description("planned")]
            Planned ,
            [Description("arrived")]
            Arrived ,
            [Description("triaged")]
            Triaged ,
            [Description("in-progress")]
            InDashProgress ,
            [Description("onleave")]
            Onleave ,
            [Description("finished")]
            Finished ,
            [Description("cancelled")]
            Cancelled ,
            [Description("entered-in-error")]
            EnteredDashInDashError ,
            [Description("unknown")]
            Unknown ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum StatusEnum
    {
        [Description("planned")]
        Planned ,
        [Description("arrived")]
        Arrived ,
        [Description("triaged")]
        Triaged ,
        [Description("in-progress")]
        InDashProgress ,
        [Description("onleave")]
        Onleave ,
        [Description("finished")]
        Finished ,
        [Description("cancelled")]
        Cancelled ,
        [Description("entered-in-error")]
        EnteredDashInDashError ,
        [Description("unknown")]
        Unknown ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

