// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

using System.ComponentModel;

namespace Aidbox.FHIR.R4.Core;

public class PractitionerRole : DomainResource
{
    public PractitionerRoleAvailableTime[]? AvailableTime { get; set; }
    public CodeableConcept[]? Specialty { get; set; }
    public PractitionerRoleNotAvailable[]? NotAvailable { get; set; }
    public ResourceReference? Organization { get; set; }
    public bool? Active { get; set; }
    public CodeableConcept[]? Code { get; set; }
    public Identifier[]? Identifier { get; set; }
    public string? AvailabilityExceptions { get; set; }
    public ResourceReference? Practitioner { get; set; }
    public ContactPoint[]? Telecom { get; set; }
    public Period? Period { get; set; }
    public ResourceReference[]? Location { get; set; }
    public ResourceReference[]? Endpoint { get; set; }
    public ResourceReference[]? HealthcareService { get; set; }
    
    public class PractitionerRoleAvailableTime : BackboneElement
    {
        public DaysOfWeekEnum[]? DaysOfWeek { get; set; }
        public bool? AllDay { get; set; }
        public string? AvailableStartTime { get; set; }
        public string? AvailableEndTime { get; set; }
        
        public enum DaysOfWeekEnum
        {
            [Description("mon")]
            Mon ,
            [Description("tue")]
            Tue ,
            [Description("wed")]
            Wed ,
            [Description("thu")]
            Thu ,
            [Description("fri")]
            Fri ,
            [Description("sat")]
            Sat ,
            [Description("sun")]
            Sun ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class PractitionerRoleNotAvailable : BackboneElement
    {
        public required string Description { get; set; }
        public Period? During { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

