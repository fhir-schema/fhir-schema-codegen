// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

using System.ComponentModel;

namespace Aidbox.FHIR.R4.Core;

public class DetectedIssue : DomainResource
{
    public ResourceReference? Patient { get; set; }
    public DetectedIssueEvidence[]? Evidence { get; set; }
    public DetectedIssueMitigation[]? Mitigation { get; set; }
    public ResourceReference? Author { get; set; }
    public string? IdentifiedDateTime { get; set; }
    public string? Reference { get; set; }
    public required StatusEnum Status { get; set; }
    public SeverityEnum? Severity { get; set; }
    public CodeableConcept? Code { get; set; }
    public Identifier[]? Identifier { get; set; }
    public ResourceReference[]? Implicated { get; set; }
    public Period? IdentifiedPeriod { get; set; }
    public string? Detail { get; set; }
    
    public class DetectedIssueEvidence : BackboneElement
    {
        public CodeableConcept[]? Code { get; set; }
        public ResourceReference[]? Detail { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class DetectedIssueMitigation : BackboneElement
    {
        public required CodeableConcept Action { get; set; }
        public string? Date { get; set; }
        public ResourceReference? Author { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum StatusEnum
    {
        [Description("registered")]
        Registered ,
        [Description("preliminary")]
        Preliminary ,
        [Description("final")]
        Final ,
        [Description("amended")]
        Amended ,
        [Description("cancelled")]
        Cancelled ,
        [Description("entered-in-error")]
        EnteredDashInDashError ,
        [Description("unknown")]
        Unknown ,
        [Description("corrected")]
        Corrected ,
    }
    public enum SeverityEnum
    {
        [Description("high")]
        High ,
        [Description("moderate")]
        Moderate ,
        [Description("low")]
        Low ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

