// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

using System.ComponentModel;

namespace Aidbox.FHIR.R4.Core;

public class BiologicallyDerivedProduct : DomainResource
{
    public ResourceReference[]? Request { get; set; }
    public BiologicallyDerivedProductProcessing[]? Processing { get; set; }
    public ResourceReference[]? Parent { get; set; }
    public StatusEnum? Status { get; set; }
    public Identifier[]? Identifier { get; set; }
    public CodeableConcept? ProductCode { get; set; }
    public BiologicallyDerivedProductStorage[]? Storage { get; set; }
    public int? Quantity { get; set; }
    public ProductCategoryEnum? ProductCategory { get; set; }
    public BiologicallyDerivedProductManipulation? Manipulation { get; set; }
    public BiologicallyDerivedProductCollection? Collection { get; set; }
    
    public class BiologicallyDerivedProductCollection : BackboneElement
    {
        public ResourceReference? Collector { get; set; }
        public ResourceReference? Source { get; set; }
        public string? CollectedDateTime { get; set; }
        public Period? CollectedPeriod { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class BiologicallyDerivedProductManipulation : BackboneElement
    {
        public string? Description { get; set; }
        public string? TimeDateTime { get; set; }
        public Period? TimePeriod { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class BiologicallyDerivedProductProcessing : BackboneElement
    {
        public string? Description { get; set; }
        public CodeableConcept? Procedure { get; set; }
        public ResourceReference? Additive { get; set; }
        public string? TimeDateTime { get; set; }
        public Period? TimePeriod { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class BiologicallyDerivedProductStorage : BackboneElement
    {
        public string? Description { get; set; }
        public decimal? Temperature { get; set; }
        public ScaleEnum? Scale { get; set; }
        public Period? Duration { get; set; }
        
        public enum ScaleEnum
        {
            [Description("farenheit")]
            Farenheit ,
            [Description("celsius")]
            Celsius ,
            [Description("kelvin")]
            Kelvin ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum StatusEnum
    {
        [Description("available")]
        Available ,
        [Description("unavailable")]
        Unavailable ,
    }
    public enum ProductCategoryEnum
    {
        [Description("organ")]
        Organ ,
        [Description("tissue")]
        Tissue ,
        [Description("fluid")]
        Fluid ,
        [Description("cells")]
        Cells ,
        [Description("biologicalAgent")]
        BiologicalAgent ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

