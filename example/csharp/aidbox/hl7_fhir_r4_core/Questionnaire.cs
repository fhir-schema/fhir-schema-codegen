// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

namespace Aidbox.FHIR.R4.Core;

public class Questionnaire : DomainResource
{
    public string? Description { get; set; }
    public SubjectTypeEnum[]? SubjectType { get; set; }
    public string? Date { get; set; }
    public string? Publisher { get; set; }
    public string? ApprovalDate { get; set; }
    public CodeableConcept[]? Jurisdiction { get; set; }
    public string[]? DerivedFrom { get; set; }
    public string? Purpose { get; set; }
    public string? Name { get; set; }
    public QuestionnaireItem[]? Item { get; set; }
    public UsageContext[]? UseContext { get; set; }
    public string? Copyright { get; set; }
    public bool? Experimental { get; set; }
    public string? Title { get; set; }
    public required StatusEnum Status { get; set; }
    public string? Url { get; set; }
    public Coding[]? Code { get; set; }
    public Identifier[]? Identifier { get; set; }
    public string? LastReviewDate { get; set; }
    public string? Version { get; set; }
    public ContactDetail[]? Contact { get; set; }
    public Period? EffectivePeriod { get; set; }
    
    public class QuestionnaireItem : BackboneElement
    {
        public EnableBehaviorEnum? EnableBehavior { get; set; }
        public string? Definition { get; set; }
        public required string LinkId { get; set; }
        public bool? Repeats { get; set; }
        public QuestionnaireItem[]? Item { get; set; }
        public required TypeEnum Type { get; set; }
        public QuestionnaireItemEnableWhen[]? EnableWhen { get; set; }
        public QuestionnaireItemAnswerOption[]? AnswerOption { get; set; }
        public string? Prefix { get; set; }
        public bool? ReadOnly { get; set; }
        public string? AnswerValueSet { get; set; }
        public Coding[]? Code { get; set; }
        public QuestionnaireItemInitial[]? Initial { get; set; }
        public int? MaxLength { get; set; }
        public bool? Required { get; set; }
        public string? Text { get; set; }
        
        public enum EnableBehaviorEnum
        {
            All ,
            Any ,
        }
        public enum TypeEnum
        {
            Group ,
            Display ,
            Question ,
            Boolean ,
            Decimal ,
            Integer ,
            Date ,
            DateTime ,
            Time ,
            String ,
            Text ,
            Url ,
            Choice ,
            OpenDashChoice ,
            Attachment ,
            Reference ,
            Quantity ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class QuestionnaireItemAnswerOption : BackboneElement
    {
        public int? ValueInteger { get; set; }
        public string? ValueDate { get; set; }
        public string? ValueTime { get; set; }
        public string? ValueString { get; set; }
        public Coding? ValueCoding { get; set; }
        public ResourceReference? ValueReference { get; set; }
        public bool? InitialSelected { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class QuestionnaireItemEnableWhen : BackboneElement
    {
        public Quantity? AnswerQuantity { get; set; }
        public decimal? AnswerDecimal { get; set; }
        public string? AnswerDate { get; set; }
        public ResourceReference? AnswerReference { get; set; }
        public int? AnswerInteger { get; set; }
        public required string Question { get; set; }
        public string? AnswerDateTime { get; set; }
        public string? AnswerString { get; set; }
        public required OperatorEnum Operator { get; set; }
        public bool? AnswerBoolean { get; set; }
        public Coding? AnswerCoding { get; set; }
        public string? AnswerTime { get; set; }
        
        public enum OperatorEnum
        {
            Exists ,
            Equal ,
            NotEqual ,
            Greater ,
            Less ,
            GreaterOrEqual ,
            LessOrEqual ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class QuestionnaireItemInitial : BackboneElement
    {
        public ResourceReference? ValueReference { get; set; }
        public string? ValueUri { get; set; }
        public string? ValueTime { get; set; }
        public decimal? ValueDecimal { get; set; }
        public Quantity? ValueQuantity { get; set; }
        public string? ValueString { get; set; }
        public bool? ValueBoolean { get; set; }
        public string? ValueDateTime { get; set; }
        public string? ValueDate { get; set; }
        public Coding? ValueCoding { get; set; }
        public int? ValueInteger { get; set; }
        public Attachment? ValueAttachment { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum SubjectTypeEnum
    {
        Account ,
        ActivityDefinition ,
        AdverseEvent ,
        AllergyIntolerance ,
        Appointment ,
        AppointmentResponse ,
        AuditEvent ,
        Basic ,
        Binary ,
        BiologicallyDerivedProduct ,
        BodyStructure ,
        Bundle ,
        CapabilityStatement ,
        CarePlan ,
        CareTeam ,
        CatalogEntry ,
        ChargeItem ,
        ChargeItemDefinition ,
        Claim ,
        ClaimResponse ,
        ClinicalImpression ,
        CodeSystem ,
        Communication ,
        CommunicationRequest ,
        CompartmentDefinition ,
        Composition ,
        ConceptMap ,
        Condition ,
        Consent ,
        Contract ,
        Coverage ,
        CoverageEligibilityRequest ,
        CoverageEligibilityResponse ,
        DetectedIssue ,
        Device ,
        DeviceDefinition ,
        DeviceMetric ,
        DeviceRequest ,
        DeviceUseStatement ,
        DiagnosticReport ,
        DocumentManifest ,
        DocumentReference ,
        DomainResource ,
        EffectEvidenceSynthesis ,
        Encounter ,
        Endpoint ,
        EnrollmentRequest ,
        EnrollmentResponse ,
        EpisodeOfCare ,
        EventDefinition ,
        Evidence ,
        EvidenceVariable ,
        ExampleScenario ,
        ExplanationOfBenefit ,
        FamilyMemberHistory ,
        Flag ,
        Goal ,
        GraphDefinition ,
        Group ,
        GuidanceResponse ,
        HealthcareService ,
        ImagingStudy ,
        Immunization ,
        ImmunizationEvaluation ,
        ImmunizationRecommendation ,
        ImplementationGuide ,
        InsurancePlan ,
        Invoice ,
        Library ,
        Linkage ,
        List ,
        Location ,
        Measure ,
        MeasureReport ,
        Media ,
        Medication ,
        MedicationAdministration ,
        MedicationDispense ,
        MedicationKnowledge ,
        MedicationRequest ,
        MedicationStatement ,
        MedicinalProduct ,
        MedicinalProductAuthorization ,
        MedicinalProductContraindication ,
        MedicinalProductIndication ,
        MedicinalProductIngredient ,
        MedicinalProductInteraction ,
        MedicinalProductManufactured ,
        MedicinalProductPackaged ,
        MedicinalProductPharmaceutical ,
        MedicinalProductUndesirableEffect ,
        MessageDefinition ,
        MessageHeader ,
        MolecularSequence ,
        NamingSystem ,
        NutritionOrder ,
        Observation ,
        ObservationDefinition ,
        OperationDefinition ,
        OperationOutcome ,
        Organization ,
        OrganizationAffiliation ,
        Parameters ,
        Patient ,
        PaymentNotice ,
        PaymentReconciliation ,
        Person ,
        PlanDefinition ,
        Practitioner ,
        PractitionerRole ,
        Procedure ,
        Provenance ,
        Questionnaire ,
        QuestionnaireResponse ,
        RelatedPerson ,
        RequestGroup ,
        ResearchDefinition ,
        ResearchElementDefinition ,
        ResearchStudy ,
        ResearchSubject ,
        Resource ,
        RiskAssessment ,
        RiskEvidenceSynthesis ,
        Schedule ,
        SearchParameter ,
        ServiceRequest ,
        Slot ,
        Specimen ,
        SpecimenDefinition ,
        StructureDefinition ,
        StructureMap ,
        Subscription ,
        Substance ,
        SubstanceNucleicAcid ,
        SubstancePolymer ,
        SubstanceProtein ,
        SubstanceReferenceInformation ,
        SubstanceSourceMaterial ,
        SubstanceSpecification ,
        SupplyDelivery ,
        SupplyRequest ,
        Task ,
        TerminologyCapabilities ,
        TestReport ,
        TestScript ,
        ValueSet ,
        VerificationResult ,
        VisionPrescription ,
    }
    public enum StatusEnum
    {
        Draft ,
        Active ,
        Retired ,
        Unknown ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

