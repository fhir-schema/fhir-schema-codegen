// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

using System.ComponentModel;

namespace Aidbox.FHIR.R4.Core;

public class Observation : DomainResource
{
    public CodeableConcept[]? Category { get; set; }
    public ObservationReferenceRange[]? ReferenceRange { get; set; }
    public ResourceReference[]? HasMember { get; set; }
    public ResourceReference[]? DerivedFrom { get; set; }
    public CodeableConcept[]? Interpretation { get; set; }
    public ResourceReference? Encounter { get; set; }
    public CodeableConcept? Method { get; set; }
    public string? ValueTime { get; set; }
    public ResourceReference? Specimen { get; set; }
    public Quantity? ValueQuantity { get; set; }
    public string? ValueString { get; set; }
    public Ratio? ValueRatio { get; set; }
    public bool? ValueBoolean { get; set; }
    public string? ValueDateTime { get; set; }
    public ObservationComponent[]? Component { get; set; }
    public Annotation[]? Note { get; set; }
    public SampledData? ValueSampledData { get; set; }
    public string? EffectiveDateTime { get; set; }
    public required StatusEnum Status { get; set; }
    public required CodeableConcept Code { get; set; }
    public Identifier[]? Identifier { get; set; }
    public Timing? EffectiveTiming { get; set; }
    public CodeableConcept? ValueCodeableConcept { get; set; }
    public CodeableConcept? BodySite { get; set; }
    public ResourceReference[]? Focus { get; set; }
    public string? Issued { get; set; }
    public Period? ValuePeriod { get; set; }
    public ResourceReference? Device { get; set; }
    public string? EffectiveInstant { get; set; }
    public ResourceReference[]? BasedOn { get; set; }
    public Range? ValueRange { get; set; }
    public ResourceReference[]? PartOf { get; set; }
    public int? ValueInteger { get; set; }
    public ResourceReference? Subject { get; set; }
    public ResourceReference[]? Performer { get; set; }
    public CodeableConcept? DataAbsentReason { get; set; }
    public Period? EffectivePeriod { get; set; }
    
    public class ObservationComponent : BackboneElement
    {
        public ObservationReferenceRange[]? ReferenceRange { get; set; }
        public CodeableConcept[]? Interpretation { get; set; }
        public string? ValueTime { get; set; }
        public Quantity? ValueQuantity { get; set; }
        public string? ValueString { get; set; }
        public Ratio? ValueRatio { get; set; }
        public bool? ValueBoolean { get; set; }
        public string? ValueDateTime { get; set; }
        public SampledData? ValueSampledData { get; set; }
        public required CodeableConcept Code { get; set; }
        public CodeableConcept? ValueCodeableConcept { get; set; }
        public Period? ValuePeriod { get; set; }
        public Range? ValueRange { get; set; }
        public int? ValueInteger { get; set; }
        public CodeableConcept? DataAbsentReason { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class ObservationReferenceRange : BackboneElement
    {
        public Quantity? Low { get; set; }
        public Quantity? High { get; set; }
        public CodeableConcept? Type { get; set; }
        public CodeableConcept[]? AppliesTo { get; set; }
        public Range? Age { get; set; }
        public string? Text { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum StatusEnum
    {
        [Description("registered")]
        Registered ,
        [Description("preliminary")]
        Preliminary ,
        [Description("final")]
        Final ,
        [Description("amended")]
        Amended ,
        [Description("cancelled")]
        Cancelled ,
        [Description("entered-in-error")]
        EnteredDashInDashError ,
        [Description("unknown")]
        Unknown ,
        [Description("corrected")]
        Corrected ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

