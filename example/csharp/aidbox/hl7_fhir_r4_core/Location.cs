// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

namespace Aidbox.FHIR.R4.Core;

public class Location : DomainResource
{
    public string? Description { get; set; }
    public Address? Address { get; set; }
    public ResourceReference? ManagingOrganization { get; set; }
    public string? Name { get; set; }
    public ModeEnum? Mode { get; set; }
    public CodeableConcept[]? Type { get; set; }
    public string[]? Alias { get; set; }
    public StatusEnum? Status { get; set; }
    public Identifier[]? Identifier { get; set; }
    public LocationHoursOfOperation[]? HoursOfOperation { get; set; }
    public string? AvailabilityExceptions { get; set; }
    public LocationPosition? Position { get; set; }
    public ContactPoint[]? Telecom { get; set; }
    public Coding? OperationalStatus { get; set; }
    public ResourceReference? PartOf { get; set; }
    public CodeableConcept? PhysicalType { get; set; }
    public ResourceReference[]? Endpoint { get; set; }
    
    public class LocationHoursOfOperation : BackboneElement
    {
        public DaysOfWeekEnum[]? DaysOfWeek { get; set; }
        public bool? AllDay { get; set; }
        public string? OpeningTime { get; set; }
        public string? ClosingTime { get; set; }
        
        public enum DaysOfWeekEnum
        {
            Mon ,
            Tue ,
            Wed ,
            Thu ,
            Fri ,
            Sat ,
            Sun ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class LocationPosition : BackboneElement
    {
        public required decimal Longitude { get; set; }
        public required decimal Latitude { get; set; }
        public decimal? Altitude { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum ModeEnum
    {
        Instance ,
        Kind ,
    }
    public enum StatusEnum
    {
        Active ,
        Suspended ,
        Inactive ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

