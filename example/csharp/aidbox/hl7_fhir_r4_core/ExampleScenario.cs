// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

namespace Aidbox.FHIR.R4.Core;

public class ExampleScenario : DomainResource
{
    public string? Date { get; set; }
    public string? Publisher { get; set; }
    public ExampleScenarioInstance[]? Instance { get; set; }
    public CodeableConcept[]? Jurisdiction { get; set; }
    public string? Purpose { get; set; }
    public string? Name { get; set; }
    public ExampleScenarioProcess[]? Process { get; set; }
    public UsageContext[]? UseContext { get; set; }
    public string? Copyright { get; set; }
    public bool? Experimental { get; set; }
    public string[]? Workflow { get; set; }
    public required StatusEnum Status { get; set; }
    public string? Url { get; set; }
    public Identifier[]? Identifier { get; set; }
    public string? Version { get; set; }
    public ContactDetail[]? Contact { get; set; }
    public ExampleScenarioActor[]? Actor { get; set; }
    
    public class ExampleScenarioActor : BackboneElement
    {
        public required string ActorId { get; set; }
        public required TypeEnum Type { get; set; }
        public string? Name { get; set; }
        public string? Description { get; set; }
        
        public enum TypeEnum
        {
            Person ,
            Entity ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class ExampleScenarioInstance : BackboneElement
    {
        public required string ResourceId { get; set; }
        public required ResourceTypeEnum ResourceType { get; set; }
        public string? Name { get; set; }
        public string? Description { get; set; }
        public ExampleScenarioInstanceVersion[]? Version { get; set; }
        public ExampleScenarioInstanceContainedInstance[]? ContainedInstance { get; set; }
        
        public enum ResourceTypeEnum
        {
            Account ,
            ActivityDefinition ,
            AdverseEvent ,
            AllergyIntolerance ,
            Appointment ,
            AppointmentResponse ,
            AuditEvent ,
            Basic ,
            Binary ,
            BiologicallyDerivedProduct ,
            BodyStructure ,
            Bundle ,
            CapabilityStatement ,
            CarePlan ,
            CareTeam ,
            CatalogEntry ,
            ChargeItem ,
            ChargeItemDefinition ,
            Claim ,
            ClaimResponse ,
            ClinicalImpression ,
            CodeSystem ,
            Communication ,
            CommunicationRequest ,
            CompartmentDefinition ,
            Composition ,
            ConceptMap ,
            Condition ,
            Consent ,
            Contract ,
            Coverage ,
            CoverageEligibilityRequest ,
            CoverageEligibilityResponse ,
            DetectedIssue ,
            Device ,
            DeviceDefinition ,
            DeviceMetric ,
            DeviceRequest ,
            DeviceUseStatement ,
            DiagnosticReport ,
            DocumentManifest ,
            DocumentReference ,
            DomainResource ,
            EffectEvidenceSynthesis ,
            Encounter ,
            Endpoint ,
            EnrollmentRequest ,
            EnrollmentResponse ,
            EpisodeOfCare ,
            EventDefinition ,
            Evidence ,
            EvidenceVariable ,
            ExampleScenario ,
            ExplanationOfBenefit ,
            FamilyMemberHistory ,
            Flag ,
            Goal ,
            GraphDefinition ,
            Group ,
            GuidanceResponse ,
            HealthcareService ,
            ImagingStudy ,
            Immunization ,
            ImmunizationEvaluation ,
            ImmunizationRecommendation ,
            ImplementationGuide ,
            InsurancePlan ,
            Invoice ,
            Library ,
            Linkage ,
            List ,
            Location ,
            Measure ,
            MeasureReport ,
            Media ,
            Medication ,
            MedicationAdministration ,
            MedicationDispense ,
            MedicationKnowledge ,
            MedicationRequest ,
            MedicationStatement ,
            MedicinalProduct ,
            MedicinalProductAuthorization ,
            MedicinalProductContraindication ,
            MedicinalProductIndication ,
            MedicinalProductIngredient ,
            MedicinalProductInteraction ,
            MedicinalProductManufactured ,
            MedicinalProductPackaged ,
            MedicinalProductPharmaceutical ,
            MedicinalProductUndesirableEffect ,
            MessageDefinition ,
            MessageHeader ,
            MolecularSequence ,
            NamingSystem ,
            NutritionOrder ,
            Observation ,
            ObservationDefinition ,
            OperationDefinition ,
            OperationOutcome ,
            Organization ,
            OrganizationAffiliation ,
            Parameters ,
            Patient ,
            PaymentNotice ,
            PaymentReconciliation ,
            Person ,
            PlanDefinition ,
            Practitioner ,
            PractitionerRole ,
            Procedure ,
            Provenance ,
            Questionnaire ,
            QuestionnaireResponse ,
            RelatedPerson ,
            RequestGroup ,
            ResearchDefinition ,
            ResearchElementDefinition ,
            ResearchStudy ,
            ResearchSubject ,
            Resource ,
            RiskAssessment ,
            RiskEvidenceSynthesis ,
            Schedule ,
            SearchParameter ,
            ServiceRequest ,
            Slot ,
            Specimen ,
            SpecimenDefinition ,
            StructureDefinition ,
            StructureMap ,
            Subscription ,
            Substance ,
            SubstanceNucleicAcid ,
            SubstancePolymer ,
            SubstanceProtein ,
            SubstanceReferenceInformation ,
            SubstanceSourceMaterial ,
            SubstanceSpecification ,
            SupplyDelivery ,
            SupplyRequest ,
            Task ,
            TerminologyCapabilities ,
            TestReport ,
            TestScript ,
            ValueSet ,
            VerificationResult ,
            VisionPrescription ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class ExampleScenarioInstanceContainedInstance : BackboneElement
    {
        public required string ResourceId { get; set; }
        public string? VersionId { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class ExampleScenarioInstanceVersion : BackboneElement
    {
        public required string VersionId { get; set; }
        public required string Description { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class ExampleScenarioProcess : BackboneElement
    {
        public required string Title { get; set; }
        public string? Description { get; set; }
        public string? PreConditions { get; set; }
        public string? PostConditions { get; set; }
        public ExampleScenarioProcessStep[]? Step { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class ExampleScenarioProcessStep : BackboneElement
    {
        public ExampleScenarioProcess[]? Process { get; set; }
        public bool? Pause { get; set; }
        public ExampleScenarioProcessStepOperation? Operation { get; set; }
        public ExampleScenarioProcessStepAlternative[]? Alternative { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class ExampleScenarioProcessStepAlternative : BackboneElement
    {
        public required string Title { get; set; }
        public string? Description { get; set; }
        public ExampleScenarioProcessStep[]? Step { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class ExampleScenarioProcessStepOperation : BackboneElement
    {
        public ExampleScenarioInstanceContainedInstance? Response { get; set; }
        public string? Description { get; set; }
        public ExampleScenarioInstanceContainedInstance? Request { get; set; }
        public required string Number { get; set; }
        public string? Name { get; set; }
        public string? Initiator { get; set; }
        public string? Type { get; set; }
        public bool? ReceiverActive { get; set; }
        public bool? InitiatorActive { get; set; }
        public string? Receiver { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum StatusEnum
    {
        Draft ,
        Active ,
        Retired ,
        Unknown ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

