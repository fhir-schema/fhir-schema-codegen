// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

namespace Aidbox.FHIR.R4.Core;

public class CapabilityStatement : DomainResource
{
    public string? Description { get; set; }
    public required string[] Format { get; set; }
    public required string Date { get; set; }
    public string? Publisher { get; set; }
    public string[]? PatchFormat { get; set; }
    public required FhirVersionEnum FhirVersion { get; set; }
    public CodeableConcept[]? Jurisdiction { get; set; }
    public string[]? Instantiates { get; set; }
    public string? Purpose { get; set; }
    public string? Name { get; set; }
    public UsageContext[]? UseContext { get; set; }
    public string? Copyright { get; set; }
    public bool? Experimental { get; set; }
    public string[]? Imports { get; set; }
    public string? Title { get; set; }
    public CapabilityStatementDocument[]? Document { get; set; }
    public required StatusEnum Status { get; set; }
    public CapabilityStatementMessaging[]? Messaging { get; set; }
    public required KindEnum Kind { get; set; }
    public string[]? ImplementationGuide { get; set; }
    public string? Url { get; set; }
    public CapabilityStatementSoftware? Software { get; set; }
    public string? Version { get; set; }
    public ContactDetail[]? Contact { get; set; }
    public CapabilityStatementImplementation? Implementation { get; set; }
    public CapabilityStatementRest[]? Rest { get; set; }
    
    public class CapabilityStatementDocument : BackboneElement
    {
        public required ModeEnum Mode { get; set; }
        public string? Documentation { get; set; }
        public required string Profile { get; set; }
        
        public enum ModeEnum
        {
            Producer ,
            Consumer ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementImplementation : BackboneElement
    {
        public required string Description { get; set; }
        public string? Url { get; set; }
        public ResourceReference? Custodian { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementMessaging : BackboneElement
    {
        public CapabilityStatementMessagingEndpoint[]? Endpoint { get; set; }
        public long? ReliableCache { get; set; }
        public string? Documentation { get; set; }
        public CapabilityStatementMessagingSupportedMessage[]? SupportedMessage { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementMessagingEndpoint : BackboneElement
    {
        public required Coding Protocol { get; set; }
        public required string Address { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementMessagingSupportedMessage : BackboneElement
    {
        public required ModeEnum Mode { get; set; }
        public required string Definition { get; set; }
        
        public enum ModeEnum
        {
            Sender ,
            Receiver ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementRest : BackboneElement
    {
        public required ModeEnum Mode { get; set; }
        public string? Documentation { get; set; }
        public CapabilityStatementRestSecurity? Security { get; set; }
        public CapabilityStatementRestResource[]? Resource { get; set; }
        public CapabilityStatementRestInteraction[]? Interaction { get; set; }
        public CapabilityStatementRestResourceSearchParam[]? SearchParam { get; set; }
        public CapabilityStatementRestResourceOperation[]? Operation { get; set; }
        public string[]? Compartment { get; set; }
        
        public enum ModeEnum
        {
            Client ,
            Server ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementRestInteraction : BackboneElement
    {
        public required CodeEnum Code { get; set; }
        public string? Documentation { get; set; }
        
        public enum CodeEnum
        {
            Transaction ,
            Batch ,
            SearchDashSystem ,
            HistoryDashSystem ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementRestResource : BackboneElement
    {
        public string[]? SearchRevInclude { get; set; }
        public CapabilityStatementRestResourceSearchParam[]? SearchParam { get; set; }
        public bool? ConditionalUpdate { get; set; }
        public ConditionalReadEnum? ConditionalRead { get; set; }
        public CapabilityStatementRestResourceOperation[]? Operation { get; set; }
        public ReferencePolicyEnum[]? ReferencePolicy { get; set; }
        public bool? ReadHistory { get; set; }
        public required TypeEnum Type { get; set; }
        public CapabilityStatementRestResourceInteraction[]? Interaction { get; set; }
        public string? Documentation { get; set; }
        public bool? UpdateCreate { get; set; }
        public bool? ConditionalCreate { get; set; }
        public string[]? SupportedProfile { get; set; }
        public string[]? SearchInclude { get; set; }
        public VersioningEnum? Versioning { get; set; }
        public string? Profile { get; set; }
        public ConditionalDeleteEnum? ConditionalDelete { get; set; }
        
        public enum ConditionalReadEnum
        {
            NotDashSupported ,
            ModifiedDashSince ,
            NotDashMatch ,
            FullDashSupport ,
        }
        public enum ReferencePolicyEnum
        {
            Literal ,
            Logical ,
            Resolves ,
            Enforced ,
            Local ,
        }
        public enum TypeEnum
        {
            Account ,
            ActivityDefinition ,
            AdverseEvent ,
            AllergyIntolerance ,
            Appointment ,
            AppointmentResponse ,
            AuditEvent ,
            Basic ,
            Binary ,
            BiologicallyDerivedProduct ,
            BodyStructure ,
            Bundle ,
            CapabilityStatement ,
            CarePlan ,
            CareTeam ,
            CatalogEntry ,
            ChargeItem ,
            ChargeItemDefinition ,
            Claim ,
            ClaimResponse ,
            ClinicalImpression ,
            CodeSystem ,
            Communication ,
            CommunicationRequest ,
            CompartmentDefinition ,
            Composition ,
            ConceptMap ,
            Condition ,
            Consent ,
            Contract ,
            Coverage ,
            CoverageEligibilityRequest ,
            CoverageEligibilityResponse ,
            DetectedIssue ,
            Device ,
            DeviceDefinition ,
            DeviceMetric ,
            DeviceRequest ,
            DeviceUseStatement ,
            DiagnosticReport ,
            DocumentManifest ,
            DocumentReference ,
            DomainResource ,
            EffectEvidenceSynthesis ,
            Encounter ,
            Endpoint ,
            EnrollmentRequest ,
            EnrollmentResponse ,
            EpisodeOfCare ,
            EventDefinition ,
            Evidence ,
            EvidenceVariable ,
            ExampleScenario ,
            ExplanationOfBenefit ,
            FamilyMemberHistory ,
            Flag ,
            Goal ,
            GraphDefinition ,
            Group ,
            GuidanceResponse ,
            HealthcareService ,
            ImagingStudy ,
            Immunization ,
            ImmunizationEvaluation ,
            ImmunizationRecommendation ,
            ImplementationGuide ,
            InsurancePlan ,
            Invoice ,
            Library ,
            Linkage ,
            List ,
            Location ,
            Measure ,
            MeasureReport ,
            Media ,
            Medication ,
            MedicationAdministration ,
            MedicationDispense ,
            MedicationKnowledge ,
            MedicationRequest ,
            MedicationStatement ,
            MedicinalProduct ,
            MedicinalProductAuthorization ,
            MedicinalProductContraindication ,
            MedicinalProductIndication ,
            MedicinalProductIngredient ,
            MedicinalProductInteraction ,
            MedicinalProductManufactured ,
            MedicinalProductPackaged ,
            MedicinalProductPharmaceutical ,
            MedicinalProductUndesirableEffect ,
            MessageDefinition ,
            MessageHeader ,
            MolecularSequence ,
            NamingSystem ,
            NutritionOrder ,
            Observation ,
            ObservationDefinition ,
            OperationDefinition ,
            OperationOutcome ,
            Organization ,
            OrganizationAffiliation ,
            Parameters ,
            Patient ,
            PaymentNotice ,
            PaymentReconciliation ,
            Person ,
            PlanDefinition ,
            Practitioner ,
            PractitionerRole ,
            Procedure ,
            Provenance ,
            Questionnaire ,
            QuestionnaireResponse ,
            RelatedPerson ,
            RequestGroup ,
            ResearchDefinition ,
            ResearchElementDefinition ,
            ResearchStudy ,
            ResearchSubject ,
            Resource ,
            RiskAssessment ,
            RiskEvidenceSynthesis ,
            Schedule ,
            SearchParameter ,
            ServiceRequest ,
            Slot ,
            Specimen ,
            SpecimenDefinition ,
            StructureDefinition ,
            StructureMap ,
            Subscription ,
            Substance ,
            SubstanceNucleicAcid ,
            SubstancePolymer ,
            SubstanceProtein ,
            SubstanceReferenceInformation ,
            SubstanceSourceMaterial ,
            SubstanceSpecification ,
            SupplyDelivery ,
            SupplyRequest ,
            Task ,
            TerminologyCapabilities ,
            TestReport ,
            TestScript ,
            ValueSet ,
            VerificationResult ,
            VisionPrescription ,
        }
        public enum VersioningEnum
        {
            NoDashVersion ,
            Versioned ,
            VersionedDashUpdate ,
        }
        public enum ConditionalDeleteEnum
        {
            NotDashSupported ,
            Single ,
            Multiple ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementRestResourceInteraction : BackboneElement
    {
        public required CodeEnum Code { get; set; }
        public string? Documentation { get; set; }
        
        public enum CodeEnum
        {
            Read ,
            Vread ,
            Update ,
            Patch ,
            Delete ,
            HistoryDashInstance ,
            HistoryDashType ,
            Create ,
            SearchDashType ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementRestResourceOperation : BackboneElement
    {
        public required string Name { get; set; }
        public required string Definition { get; set; }
        public string? Documentation { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementRestResourceSearchParam : BackboneElement
    {
        public required string Name { get; set; }
        public string? Definition { get; set; }
        public required TypeEnum Type { get; set; }
        public string? Documentation { get; set; }
        
        public enum TypeEnum
        {
            Number ,
            Date ,
            String ,
            Token ,
            Reference ,
            Composite ,
            Quantity ,
            Uri ,
            Special ,
        }
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementRestSecurity : BackboneElement
    {
        public bool? Cors { get; set; }
        public CodeableConcept[]? Service { get; set; }
        public string? Description { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    public class CapabilityStatementSoftware : BackboneElement
    {
        public required string Name { get; set; }
        public string? Version { get; set; }
        public string? ReleaseDate { get; set; }
        
        public override string ToString() => 
            JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
        
    }
    
    
    public enum FhirVersionEnum
    {
        _0Dot01 ,
        _0Dot05 ,
        _0Dot06 ,
        _0Dot11 ,
        _0Dot0Dot80 ,
        _0Dot0Dot81 ,
        _0Dot0Dot82 ,
        _0Dot4Dot0 ,
        _0Dot5Dot0 ,
        _1Dot0Dot0 ,
        _1Dot0Dot1 ,
        _1Dot0Dot2 ,
        _1Dot1Dot0 ,
        _1Dot4Dot0 ,
        _1Dot6Dot0 ,
        _1Dot8Dot0 ,
        _3Dot0Dot0 ,
        _3Dot0Dot1 ,
        _3Dot3Dot0 ,
        _3Dot5Dot0 ,
        _4Dot0Dot0 ,
        _4Dot0Dot1 ,
    }
    public enum StatusEnum
    {
        Draft ,
        Active ,
        Retired ,
        Unknown ,
    }
    public enum KindEnum
    {
        Instance ,
        Capability ,
        Requirements ,
    }
    public override string ToString() => 
        JsonSerializer.Serialize(this, Aidbox.Config.JsonSerializerOptions);
    
}

